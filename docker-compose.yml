version: '3.2'

services:
  app:
    build: .
    user: nobody
    hostname: app
    depends_on:
      - db
    ports:
      - "8080:8080"
    # command: ["./wait-for-it.sh", "db:5432", "--", "python", "run.py"]
    command: ["./wait-for-it.sh", "db:5432", "--", "uwsgi", "--http", ":8080", "--wsgi-file", "wsgi.py"]
    env_file: .env
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      - COALICS_CSRF_KEY=DUMMYDEBUGVALUE
    working_dir: /src
    volumes:
      - ./:/src


  # worker:
    # build: .
    # user: nobody
    # hostname: app
    # depends_on:
      # - db
      # - app
    # command: ["./wait-for-it.sh", "db:5432", "--", "python", "coalics/schedule.py"]
    # env_file: .env
    # environment:
      # - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB}
      # - COALICS_CSRF_KEY=DUMMYDEBUGVALUE


  db:
    image: 'postgres:10.0-alpine'
    env_file: .env
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
